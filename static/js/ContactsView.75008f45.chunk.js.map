{"version":3,"file":"static/js/ContactsView.75008f45.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContainerContacts/ContainerContacts.js","components/Filter/Filter.js","components/Section/Section.js","views/ContactsView.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from '../../redux/contacts/contacts-slice';\nimport { SpinnerAudio } from '../Spinner/Spinner';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Box, TextField, Button } from '@mui/material';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (\n      data.find(\n        contact =>\n          contact.name.toLowerCase() === name.toLowerCase() ||\n          contact.number === number\n      )\n    ) {\n      toast.error(`${name} is already in contacts!`);\n    } else {\n      await createContact({ name, number });\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      sx={{\n        maxWidth: '260px',\n        margin: 'auto',\n        padding: '16px',\n        border: '1px solid #2a2a2a',\n        borderRadius: '4px',\n        '&:hover': {\n          boxShadow: '-1px 15px 30px -12px black',\n        },\n      }}\n    >\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <TextField\n        margin=\"none\"\n        fullWidth\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          width: 80,\n          color: 'white',\n          background: '#3f51b5',\n          fontWeight: 600,\n          '&:hover': {\n            backgroundColor: '#303f9f',\n          },\n        }}\n      >\n        {isLoading && <SpinnerAudio />}\n        add\n      </Button>\n    </Box>\n  );\n}\n","import { useDeleteContactMutation } from '../../redux/contacts/contacts-slice';\nimport { Box, Button, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <Box\n      component=\"li\"\n      fullWidth\n      sx={{\n        display: 'inline',\n        marginBottom: '5px',\n        padding: '8px 12px',\n        border: '1px solid rgba(33, 33, 33, 0.2)',\n        borderRadius: '4px',\n        '&:hover': {\n          boxShadow: '-1px 15px 30px -12px black',\n        },\n      }}\n    >\n      <Typography\n        sx={{\n          display: 'flex',\n          textAlign: 'start',\n          fontWeight: 'bold',\n        }}\n      >\n        {name + ':'}\n      </Typography>\n      <Box\n        component=\"div\"\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          fontWeight: 'bold',\n        }}\n      >\n        <Typography>{number}</Typography>\n        <Button\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={isDeleting}\n          sx={{ padding: 0, minWidth: '24px' }}\n        >\n          {isDeleting ? (\n            <DeleteIcon\n              sx={{\n                color: '#3f51b5',\n                background: 'white',\n                '&:hover': {\n                  color: 'white',\n                  background: '#303f9f',\n                  borderRadius: 50,\n                },\n              }}\n            />\n          ) : (\n            <DeleteIcon\n              sx={{\n                color: '#303f9f',\n                background: 'white',\n                borderRadius: 50,\n              }}\n            />\n          )}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContactListItem;\n","export const getFilter = state => state.contacts.filter;\n","import { useFetchContactsQuery } from '../../redux/contacts/contacts-slice';\n\nimport ContactListItem from '../ContactListItem';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { useSelector } from 'react-redux';\nimport { SpinnerMutatingDots } from '../Spinner/Spinner';\nimport { Box } from '@mui/material';\n\nconst ContactList = () => {\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter).toLowerCase();\n  const getFiltredContacts = contacts =>\n    contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  const filtred = data ? getFiltredContacts(data) : [];\n\n  return (\n    <>\n      {isFetching && <SpinnerMutatingDots />}\n      <Box\n        component=\"ul\"\n        maxWidth=\"xs\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          maxWidth: '260px',\n          margin: 'auto',\n          marginBottom: '20px',\n          padding: '16px',\n          border: '1px solid #2a2a2a',\n          borderRadius: '4px',\n        }}\n      >\n        {filtred &&\n          filtred.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n      </Box>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { Container, Typography } from '@mui/material';\n\nconst ContainerContacts = ({ title, children }) => (\n  <Container maxWidth=\"xs\">\n    {title && (\n      <Typography\n        sx={{\n          fontWeight: 700,\n          marginTop: '25px',\n          textTransform: 'uppercase',\n          fontSize: 20,\n          color: '#5c6368',\n        }}\n      >\n        {title}\n      </Typography>\n    )}\n    {children}\n  </Container>\n);\n\nexport default ContainerContacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { Box, TextField } from '@mui/material';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      sx={{\n        maxWidth: '260px',\n        margin: 'auto',\n        padding: '12px',\n      }}\n    >\n      <TextField\n        margin=\"none\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import { Container, Typography } from '@mui/material';\n\nexport default function Section({ title, children }) {\n  return (\n    <Container\n      maxWidth=\"xs\"\n      sx={{\n        marginTop: 15,\n        textAlign: 'center',\n        minWidth: 280,\n        border: '1px solid grey',\n        borderRadius: '25px',\n        background: 'white',\n        boxShadow: '-1px 15px 30px -12px black',\n        zIndex: 9999,\n      }}\n    >\n      {title && (\n        <Typography\n          sx={{\n            fontWeight: 700,\n            padding: '20px',\n            textTransform: 'uppercase',\n            fontSize: 24,\n            color: '#5c6368',\n          }}\n        >\n          {title}\n        </Typography>\n      )}\n      {children}\n    </Container>\n  );\n}\n","import ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport ContainerContacts from '../components/ContainerContacts';\nimport Filter from '../components/Filter';\nimport Section from '../components/Section';\n\nexport default function ContactsView() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <ContainerContacts title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </ContainerContacts>\n      </Section>\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["ContactForm","useState","name","setName","number","setNumber","data","useFetchContactsQuery","useCreateContactMutation","createContact","isLoading","handleChange","e","target","value","handleSubmit","preventDefault","find","contact","toLowerCase","toast","Box","component","onSubmit","autoComplete","sx","maxWidth","margin","padding","border","borderRadius","boxShadow","position","reverseOrder","TextField","fullWidth","label","variant","type","onChange","pattern","title","Button","width","color","background","fontWeight","backgroundColor","Spinner","id","useDeleteContactMutation","deleteContact","isDeleting","display","marginBottom","Typography","textAlign","alignItems","justifyContent","onClick","disabled","minWidth","Delete","getFilter","state","contacts","filter","isFetching","useSelector","filtred","includes","flexDirection","map","children","Container","marginTop","textTransform","fontSize","dispatch","useDispatch","changeFilter","Section","zIndex","ContactsView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}